#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FamilyShopping.FamilyShoppingDAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Shopping")]
	public partial class ShoppingDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertShoppingDate(ShoppingDate instance);
    partial void UpdateShoppingDate(ShoppingDate instance);
    partial void DeleteShoppingDate(ShoppingDate instance);
    partial void InsertShoppingItem(ShoppingItem instance);
    partial void UpdateShoppingItem(ShoppingItem instance);
    partial void DeleteShoppingItem(ShoppingItem instance);
    partial void InsertShoppingPlace(ShoppingPlace instance);
    partial void UpdateShoppingPlace(ShoppingPlace instance);
    partial void DeleteShoppingPlace(ShoppingPlace instance);
    partial void InsertShoppingUnitAmount(ShoppingUnitAmount instance);
    partial void UpdateShoppingUnitAmount(ShoppingUnitAmount instance);
    partial void DeleteShoppingUnitAmount(ShoppingUnitAmount instance);
    #endregion
		
		public ShoppingDataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ShoppingConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ShoppingDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShoppingDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShoppingDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShoppingDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ShoppingDate> ShoppingDates
		{
			get
			{
				return this.GetTable<ShoppingDate>();
			}
		}
		
		public System.Data.Linq.Table<ShoppingItem> ShoppingItems
		{
			get
			{
				return this.GetTable<ShoppingItem>();
			}
		}
		
		public System.Data.Linq.Table<ShoppingPlace> ShoppingPlaces
		{
			get
			{
				return this.GetTable<ShoppingPlace>();
			}
		}
		
		public System.Data.Linq.Table<ShoppingUnitAmount> ShoppingUnitAmounts
		{
			get
			{
				return this.GetTable<ShoppingUnitAmount>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShoppingDate")]
	public partial class ShoppingDate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private System.DateTime _Date;
		
		private EntitySet<ShoppingItem> _ShoppingItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    #endregion
		
		public ShoppingDate()
		{
			this._ShoppingItems = new EntitySet<ShoppingItem>(new Action<ShoppingItem>(this.attach_ShoppingItems), new Action<ShoppingItem>(this.detach_ShoppingItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShoppingDate_ShoppingItem", Storage="_ShoppingItems", ThisKey="OID", OtherKey="ShoppingDateOID")]
		public EntitySet<ShoppingItem> ShoppingItems
		{
			get
			{
				return this._ShoppingItems;
			}
			set
			{
				this._ShoppingItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShoppingItems(ShoppingItem entity)
		{
			this.SendPropertyChanging();
			entity.ShoppingDate = this;
		}
		
		private void detach_ShoppingItems(ShoppingItem entity)
		{
			this.SendPropertyChanging();
			entity.ShoppingDate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShoppingItem")]
	public partial class ShoppingItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _ItemDescription;
		
		private int _Quantity;
		
		private decimal _MaxPrice;
		
		private long _ShoppingDateOID;
		
		private long _ShoppingPlaceOID;
		
		private long _ShoppingUnitAmountOID;
		
		private EntityRef<ShoppingDate> _ShoppingDate;
		
		private EntityRef<ShoppingPlace> _ShoppingPlace;
		
		private EntityRef<ShoppingUnitAmount> _ShoppingUnitAmount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnItemDescriptionChanging(string value);
    partial void OnItemDescriptionChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnMaxPriceChanging(decimal value);
    partial void OnMaxPriceChanged();
    partial void OnShoppingDateOIDChanging(long value);
    partial void OnShoppingDateOIDChanged();
    partial void OnShoppingPlaceOIDChanging(long value);
    partial void OnShoppingPlaceOIDChanged();
    partial void OnShoppingUnitAmountOIDChanging(long value);
    partial void OnShoppingUnitAmountOIDChanged();
    #endregion
		
		public ShoppingItem()
		{
			this._ShoppingDate = default(EntityRef<ShoppingDate>);
			this._ShoppingPlace = default(EntityRef<ShoppingPlace>);
			this._ShoppingUnitAmount = default(EntityRef<ShoppingUnitAmount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDescription", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ItemDescription
		{
			get
			{
				return this._ItemDescription;
			}
			set
			{
				if ((this._ItemDescription != value))
				{
					this.OnItemDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ItemDescription = value;
					this.SendPropertyChanged("ItemDescription");
					this.OnItemDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPrice", DbType="Decimal(10,2) NOT NULL")]
		public decimal MaxPrice
		{
			get
			{
				return this._MaxPrice;
			}
			set
			{
				if ((this._MaxPrice != value))
				{
					this.OnMaxPriceChanging(value);
					this.SendPropertyChanging();
					this._MaxPrice = value;
					this.SendPropertyChanged("MaxPrice");
					this.OnMaxPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShoppingDateOID", DbType="BigInt NOT NULL")]
		public long ShoppingDateOID
		{
			get
			{
				return this._ShoppingDateOID;
			}
			set
			{
				if ((this._ShoppingDateOID != value))
				{
					if (this._ShoppingDate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShoppingDateOIDChanging(value);
					this.SendPropertyChanging();
					this._ShoppingDateOID = value;
					this.SendPropertyChanged("ShoppingDateOID");
					this.OnShoppingDateOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShoppingPlaceOID", DbType="BigInt NOT NULL")]
		public long ShoppingPlaceOID
		{
			get
			{
				return this._ShoppingPlaceOID;
			}
			set
			{
				if ((this._ShoppingPlaceOID != value))
				{
					if (this._ShoppingPlace.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShoppingPlaceOIDChanging(value);
					this.SendPropertyChanging();
					this._ShoppingPlaceOID = value;
					this.SendPropertyChanged("ShoppingPlaceOID");
					this.OnShoppingPlaceOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShoppingUnitAmountOID", DbType="BigInt NOT NULL")]
		public long ShoppingUnitAmountOID
		{
			get
			{
				return this._ShoppingUnitAmountOID;
			}
			set
			{
				if ((this._ShoppingUnitAmountOID != value))
				{
					if (this._ShoppingUnitAmount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShoppingUnitAmountOIDChanging(value);
					this.SendPropertyChanging();
					this._ShoppingUnitAmountOID = value;
					this.SendPropertyChanged("ShoppingUnitAmountOID");
					this.OnShoppingUnitAmountOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShoppingDate_ShoppingItem", Storage="_ShoppingDate", ThisKey="ShoppingDateOID", OtherKey="OID", IsForeignKey=true)]
		public ShoppingDate ShoppingDate
		{
			get
			{
				return this._ShoppingDate.Entity;
			}
			set
			{
				ShoppingDate previousValue = this._ShoppingDate.Entity;
				if (((previousValue != value) 
							|| (this._ShoppingDate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShoppingDate.Entity = null;
						previousValue.ShoppingItems.Remove(this);
					}
					this._ShoppingDate.Entity = value;
					if ((value != null))
					{
						value.ShoppingItems.Add(this);
						this._ShoppingDateOID = value.OID;
					}
					else
					{
						this._ShoppingDateOID = default(long);
					}
					this.SendPropertyChanged("ShoppingDate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShoppingPlace_ShoppingItem", Storage="_ShoppingPlace", ThisKey="ShoppingPlaceOID", OtherKey="OID", IsForeignKey=true)]
		public ShoppingPlace ShoppingPlace
		{
			get
			{
				return this._ShoppingPlace.Entity;
			}
			set
			{
				ShoppingPlace previousValue = this._ShoppingPlace.Entity;
				if (((previousValue != value) 
							|| (this._ShoppingPlace.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShoppingPlace.Entity = null;
						previousValue.ShoppingItems.Remove(this);
					}
					this._ShoppingPlace.Entity = value;
					if ((value != null))
					{
						value.ShoppingItems.Add(this);
						this._ShoppingPlaceOID = value.OID;
					}
					else
					{
						this._ShoppingPlaceOID = default(long);
					}
					this.SendPropertyChanged("ShoppingPlace");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShoppingUnitAmount_ShoppingItem", Storage="_ShoppingUnitAmount", ThisKey="ShoppingUnitAmountOID", OtherKey="OID", IsForeignKey=true)]
		public ShoppingUnitAmount ShoppingUnitAmount
		{
			get
			{
				return this._ShoppingUnitAmount.Entity;
			}
			set
			{
				ShoppingUnitAmount previousValue = this._ShoppingUnitAmount.Entity;
				if (((previousValue != value) 
							|| (this._ShoppingUnitAmount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShoppingUnitAmount.Entity = null;
						previousValue.ShoppingItems.Remove(this);
					}
					this._ShoppingUnitAmount.Entity = value;
					if ((value != null))
					{
						value.ShoppingItems.Add(this);
						this._ShoppingUnitAmountOID = value.OID;
					}
					else
					{
						this._ShoppingUnitAmountOID = default(long);
					}
					this.SendPropertyChanged("ShoppingUnitAmount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShoppingPlace")]
	public partial class ShoppingPlace : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _Description;
		
		private string _Address;
		
		private EntitySet<ShoppingItem> _ShoppingItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public ShoppingPlace()
		{
			this._ShoppingItems = new EntitySet<ShoppingItem>(new Action<ShoppingItem>(this.attach_ShoppingItems), new Action<ShoppingItem>(this.detach_ShoppingItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShoppingPlace_ShoppingItem", Storage="_ShoppingItems", ThisKey="OID", OtherKey="ShoppingPlaceOID")]
		public EntitySet<ShoppingItem> ShoppingItems
		{
			get
			{
				return this._ShoppingItems;
			}
			set
			{
				this._ShoppingItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShoppingItems(ShoppingItem entity)
		{
			this.SendPropertyChanging();
			entity.ShoppingPlace = this;
		}
		
		private void detach_ShoppingItems(ShoppingItem entity)
		{
			this.SendPropertyChanging();
			entity.ShoppingPlace = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShoppingUnitAmount")]
	public partial class ShoppingUnitAmount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OID;
		
		private string _Description;
		
		private EntitySet<ShoppingItem> _ShoppingItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(long value);
    partial void OnOIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ShoppingUnitAmount()
		{
			this._ShoppingItems = new EntitySet<ShoppingItem>(new Action<ShoppingItem>(this.attach_ShoppingItems), new Action<ShoppingItem>(this.detach_ShoppingItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShoppingUnitAmount_ShoppingItem", Storage="_ShoppingItems", ThisKey="OID", OtherKey="ShoppingUnitAmountOID")]
		public EntitySet<ShoppingItem> ShoppingItems
		{
			get
			{
				return this._ShoppingItems;
			}
			set
			{
				this._ShoppingItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShoppingItems(ShoppingItem entity)
		{
			this.SendPropertyChanging();
			entity.ShoppingUnitAmount = this;
		}
		
		private void detach_ShoppingItems(ShoppingItem entity)
		{
			this.SendPropertyChanging();
			entity.ShoppingUnitAmount = null;
		}
	}
}
#pragma warning restore 1591
